module StateMachine_Processor
(
	input clk,
	input reset,
	input DataIn_t	Size_Matriz,
	input One_t DatosVector_Ready,
	input One_t DatosMatriz_Ready,

);

always_ff @(posedge clk  or negedge reset) begin:Processor
	if(!reset)begin
		Cntrl_P1 <= 0;
		Cntrl_P2 <= 0;
		Cntrl_P3 <= 0;
		Cntrl_P4 <= 0;
	end
	
	else begin   
	
		 case(State)
			Processor_1:begin 
				if(1 <= Size_Matriz)
					Cntrl_P1 <= 1;
				else if (Size_Matriz>=5 && (Cnt_P1==1))
					Cntrl_P1 <= 2;
				State <= Processor_2;
			end
			Processor_2:begin 
				if(2 <= Size_Matriz)
					Cntrl_P3 <= 1;
				else if (Size_Matriz>=6 && (Cnt_P2==1))
					Cntrl_P3 <= 2;
				State <= Processor_3;
			end
			Processor_3:begin 
				if(2 <= Size_Matriz)
					Cntrl_P2 <= 1;
				else if (Size_Matriz>=7 && (Cnt_P3==1))
					Cntrl_P2 <= 2;
				State <= Processor_4;
			end
			Processor_4:begin 
				if(2 <= Size_Matriz)
					Cntrl_P4 <= 1;
				else if (Size_Matriz>=8 && (Cnt_P4==1))
					Cntrl_P4 <= 2;
				State <= Processor_1;
			end
			default: begin 
			
			end
		 
		 endcase 
	end 
	
end:Processor