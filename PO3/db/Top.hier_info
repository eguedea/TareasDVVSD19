|uart_transmitter
clk => One_Shot:txshot.clk
clk => uart_tx_fsm:txfsm.clk
clk => uart_timer:rxtimer.clk
clk => uart_bit_counter:rxbitcounter.clk
clk => piso_msb:uartpiso.clk
reset => One_Shot:txshot.reset
reset => uart_tx_fsm:txfsm.reset
reset => uart_timer:rxtimer.reset
reset => uart_bit_counter:rxbitcounter.reset
reset => piso_msb:uartpiso.reset
transmit => One_Shot:txshot.Start
data[0] => uart_parity_mod:uartparitygen.data[0]
data[0] => piso_msb:uartpiso.inp[8]
data[1] => uart_parity_mod:uartparitygen.data[1]
data[1] => piso_msb:uartpiso.inp[7]
data[2] => uart_parity_mod:uartparitygen.data[2]
data[2] => piso_msb:uartpiso.inp[6]
data[3] => uart_parity_mod:uartparitygen.data[3]
data[3] => piso_msb:uartpiso.inp[5]
data[4] => uart_parity_mod:uartparitygen.data[4]
data[4] => piso_msb:uartpiso.inp[4]
data[5] => uart_parity_mod:uartparitygen.data[5]
data[5] => piso_msb:uartpiso.inp[3]
data[6] => uart_parity_mod:uartparitygen.data[6]
data[6] => piso_msb:uartpiso.inp[2]
data[7] => uart_parity_mod:uartparitygen.data[7]
data[7] => piso_msb:uartpiso.inp[1]
serial_output_rx <= piso_msb:uartpiso.out
busy <= uart_tx_fsm:txfsm.busy


|uart_transmitter|One_Shot:txshot
clk => state~2.DATAIN
reset => state~4.DATAIN
Start => state.DATAB
Start => Selector1.IN2
Start => Selector0.IN1
Shot <= Shot.DB_MAX_OUTPUT_PORT_TYPE


|uart_transmitter|uart_tx_fsm:txfsm
clk => txstates[0].CLK
clk => txstates[1].CLK
clk => txstates[2].CLK
clk => txstates[3].CLK
clk => txstates[4].CLK
clk => txstates[5].CLK
clk => txstates[6].CLK
clk => txstates[7].CLK
clk => txstates[8].CLK
clk => txstates[9].CLK
clk => txstates[10].CLK
clk => txstates[11].CLK
clk => txstates[12].CLK
clk => txstates[13].CLK
clk => txstates[14].CLK
clk => txstates[15].CLK
clk => txstates[16].CLK
clk => txstates[17].CLK
clk => txstates[18].CLK
clk => txstates[19].CLK
clk => txstates[20].CLK
clk => txstates[21].CLK
clk => txstates[22].CLK
clk => txstates[23].CLK
clk => txstates[24].CLK
clk => txstates[25].CLK
clk => txstates[26].CLK
clk => txstates[27].CLK
clk => txstates[28].CLK
clk => txstates[29].CLK
clk => txstates[30].CLK
clk => txstates[31].CLK
reset => txstates[0].ACLR
reset => txstates[1].ACLR
reset => txstates[2].ACLR
reset => txstates[3].ACLR
reset => txstates[4].ACLR
reset => txstates[5].ACLR
reset => txstates[6].ACLR
reset => txstates[7].ACLR
reset => txstates[8].ACLR
reset => txstates[9].ACLR
reset => txstates[10].ACLR
reset => txstates[11].ACLR
reset => txstates[12].ACLR
reset => txstates[13].ACLR
reset => txstates[14].ACLR
reset => txstates[15].ACLR
reset => txstates[16].ACLR
reset => txstates[17].ACLR
reset => txstates[18].ACLR
reset => txstates[19].ACLR
reset => txstates[20].ACLR
reset => txstates[21].ACLR
reset => txstates[22].ACLR
reset => txstates[23].ACLR
reset => txstates[24].ACLR
reset => txstates[25].ACLR
reset => txstates[26].ACLR
reset => txstates[27].ACLR
reset => txstates[28].ACLR
reset => txstates[29].ACLR
reset => txstates[30].ACLR
reset => txstates[31].ACLR
start => Selector31.IN7
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
start => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
next_bit => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => txstates.OUTPUTSELECT
bit_counter => Selector29.IN9
bit_counter => Selector30.IN3
reset_timer <= reset_timer.DB_MAX_OUTPUT_PORT_TYPE
increment_bit_counter <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
reset_bit_counter <= reset_bit_counter.DB_MAX_OUTPUT_PORT_TYPE
shift_reg <= Equal3.DB_MAX_OUTPUT_PORT_TYPE
load_reg <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy.DB_MAX_OUTPUT_PORT_TYPE
idle_line <= busy.DB_MAX_OUTPUT_PORT_TYPE


|uart_transmitter|uart_timer:rxtimer
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
clk => counter[4].CLK
clk => counter[5].CLK
clk => counter[6].CLK
clk => counter[7].CLK
clk => counter[8].CLK
clk => next_bit~reg0.CLK
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
reset => counter[4].ACLR
reset => counter[5].ACLR
reset => counter[6].ACLR
reset => counter[7].ACLR
reset => counter[8].ACLR
reset => next_bit~reg0.ACLR
reset_timer => next_bit.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
reset_timer => counter.OUTPUTSELECT
next_bit <= next_bit~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_transmitter|uart_bit_counter:rxbitcounter
clk => bit_counter~reg0.CLK
clk => counter[0].CLK
clk => counter[1].CLK
clk => counter[2].CLK
clk => counter[3].CLK
reset => bit_counter~reg0.ACLR
reset => counter[0].ACLR
reset => counter[1].ACLR
reset => counter[2].ACLR
reset => counter[3].ACLR
increment_bit_counter => counter.OUTPUTSELECT
increment_bit_counter => counter.OUTPUTSELECT
increment_bit_counter => counter.OUTPUTSELECT
increment_bit_counter => counter.OUTPUTSELECT
reset_bit_counter => bit_counter.OUTPUTSELECT
reset_bit_counter => counter[3].ENA
reset_bit_counter => counter[2].ENA
reset_bit_counter => counter[1].ENA
reset_bit_counter => counter[0].ENA
bit_counter <= bit_counter~reg0.DB_MAX_OUTPUT_PORT_TYPE


|uart_transmitter|uart_parity_mod:uartparitygen
data[0] => WideXor0.IN0
data[1] => WideXor0.IN1
data[2] => WideXor0.IN2
data[3] => WideXor0.IN3
data[4] => WideXor0.IN4
data[5] => WideXor0.IN5
data[6] => WideXor0.IN6
data[7] => WideXor0.IN7
parity <= WideXor0.DB_MAX_OUTPUT_PORT_TYPE


|uart_transmitter|piso_msb:uartpiso
clk => rgstr_r[0].CLK
clk => rgstr_r[1].CLK
clk => rgstr_r[2].CLK
clk => rgstr_r[3].CLK
clk => rgstr_r[4].CLK
clk => rgstr_r[5].CLK
clk => rgstr_r[6].CLK
clk => rgstr_r[7].CLK
clk => rgstr_r[8].CLK
clk => rgstr_r[9].CLK
reset => rgstr_r[0].PRESET
reset => rgstr_r[1].PRESET
reset => rgstr_r[2].PRESET
reset => rgstr_r[3].PRESET
reset => rgstr_r[4].PRESET
reset => rgstr_r[5].PRESET
reset => rgstr_r[6].PRESET
reset => rgstr_r[7].PRESET
reset => rgstr_r[8].PRESET
reset => rgstr_r[9].PRESET
enb => rgstr_r[0].ENA
enb => rgstr_r[9].ENA
enb => rgstr_r[8].ENA
enb => rgstr_r[7].ENA
enb => rgstr_r[6].ENA
enb => rgstr_r[5].ENA
enb => rgstr_r[4].ENA
enb => rgstr_r[3].ENA
enb => rgstr_r[2].ENA
enb => rgstr_r[1].ENA
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
load => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
shift => rgstr_r.OUTPUTSELECT
inp[0] => rgstr_r.DATAB
inp[1] => rgstr_r.DATAB
inp[2] => rgstr_r.DATAB
inp[3] => rgstr_r.DATAB
inp[4] => rgstr_r.DATAB
inp[5] => rgstr_r.DATAB
inp[6] => rgstr_r.DATAB
inp[7] => rgstr_r.DATAB
inp[8] => rgstr_r.DATAB
inp[9] => rgstr_r.DATAB
fsmReset => out.OUTPUTSELECT
out <= out.DB_MAX_OUTPUT_PORT_TYPE


